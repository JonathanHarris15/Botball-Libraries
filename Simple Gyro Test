#include <kipr/botball.h>
int bias;
int speed;
int deg;
int dist;
float a_speed;
float b_speed;
int theta;

void calibrate_gyros();
void gyro_r_turn();
void gyro_l_turn();
void gyro_straight();

int main()
{
 
   gyro_straight(1000,7500);
    
  gyro_r_turn(400,600000);
    
  gyro_straight(1000,2500);
 
  gyro_l_turn(400,570000);
    
   gyro_straight(1000,5000);
    
    ao();
    return 0;
}
void calibrate_gyros(){
    int i=0;
    int sum=0;
    
    while(i<50){
        
        sum += gyro_z();
        msleep(1);
        i++;
    }
    bias = sum/50;
    msleep(100);
        printf("bias: %d\n",bias);
    
}
void gyro_r_turn(speed,deg){
    theta = 0;
    
  calibrate_gyros();
    
    mav(0,speed);
    mav(3,-speed);
    
    while(theta <=deg){
        msleep(10);
        theta += abs(gyro_z() - bias)*10;
        printf("theta %d\n",theta);
    }
    
    mav(0,0);
    mav(3,0);
   msleep(100);
    
}
void gyro_l_turn(speed,deg){
    theta = 0;
    
 calibrate_gyros();
    
    mav(0,-speed);
    mav(3,speed);
    
    while(theta <=deg){
        
        msleep(10);
        theta += abs(gyro_z() - bias) * 10;
        printf("theta %d\n",theta);
        
    }
    
    mav(0,0);
    mav(3,0);
    msleep(100);
}

void gyro_straight(speed,dist){
    
    cmpc(0);
    theta = 0;
    calibrate_gyros();
    
       while (gmpc(0) < dist){
           
           a_speed = (0.2*theta) + speed;
           b_speed = (-0.2*theta) + speed;
           mav(0,a_speed);
           mav(3,b_speed);
           msleep(1);
           theta += (gyro_z() - bias )*1;
       }
                       
       }
        
    
